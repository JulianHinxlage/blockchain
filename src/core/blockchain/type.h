//
// Copyright (c) 2024 Julian Hinxlage. All rights reserved.
//

#pragma once

#include "util/Blob.h"

typedef Blob<256> Hash;

enum class BlockError {
	NOT_CHECKED,
	VALID,
	INVALID_VERSION,
	INVALID_TRANSACTION_COUNT,
	INVALID_TRANSACTION_ROOT,
	INVALID_PUBLIC_KEY,
	INVALID_SIGNATURE,
	PREVIOUS_BLOCK_NOT_FOUND,
	INVALID_PREVIOUS,
	INVALID_BLOCK_NUMBER,
	INVALID_VALIDATOR,
	INVALID_TIMESTAMP,
	INVALID_FUTURE_BLOCK,
	INVALID_SEED,
	TRANSACTION_NOT_FOUND,
	INVALID_TRANSACTION,
	INVALID_ACCOUNT_TREE_ROOT,
	INVALID_VALIDATOR_TREE_ROOT,
	INVALID_TOTAL_STAKE_AMOUNT,
};

enum class TransactionError {
	VALID,
	INVALID_VERSION,
	INVALID_TYPE,
	INVALID_PUBLIC_KEY,
	INVALID_SIGNATURE,
	INVALID_BALANCE,
	INVALID_TRANSACTION_NUMBER,
	INVALID_STAKE_AMOUNT,
	INVALID_STAKE_OWNER,
};
